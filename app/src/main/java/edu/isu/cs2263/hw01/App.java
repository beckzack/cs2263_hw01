/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package edu.isu.cs2263.hw01;

import org.apache.commons.cli.*;

/**
 * A Java application that evaluates mathematical expressions. Expressions can be input by the user or read from a
 * text and users have the option to output the results to a text file.
 *
 * @author Zackary Beck
 */
public class App {
    /***
     * A simple method to add three CLI options to a list of options
     *
     * @return The list of options
     */
    public Options addOptions(){
        Options options = new Options();

        options.addOption(new Option("h", "help", false, "Displays this help menu"));
        options.addOption(Option.builder("o").longOpt("output").hasArg().argName("file").desc("Writes the expression results to the given output file").build());
        options.addOption(Option.builder("b").longOpt("batch").hasArg().argName("file").desc("Reads expressions from the given input file").build());

        return options;
    }
    public static void main(String[] args) {
        App app = new App();
        Options options = app.addOptions();

        String header = "Evaluation of simple mathematical expressions\n\n";
        String footer = "\nCopyright (C) 2022 Zackary C. Beck";

        CommandLineParser parser = new DefaultParser();
        try {
            CommandLine cmd = parser.parse(options, args);

            if (cmd.hasOption("h")) {
                HelpFormatter formatter = new HelpFormatter();
                formatter.printHelp("eval", header, options, footer, true);
            } else if (cmd.hasOption("b")) {
                //System.out.println("Batch value: " + args[1]);
                new InputFromFile(args[1]);
            } else if (cmd.hasOption("o")) {
                System.out.println("Output value: " + args[1]);
            } else if (cmd.getArgs().length == 0) {
                new InputFromCommandLine();
            }

        } catch (ParseException e){
            e.printStackTrace();
        }
    }
}
